systemctl status sshd
	ssh 연결 되는지 확인
ssh

pwd : 현재 디렉토리 출력
whoami : 내 계정 이름 확인
yum : pip, conda 같은거.
clear 화면 지워라
sudo 관리자권한
history 히스토리 볼 수 있다.
# 주석
tree 파일 구조 볼 수 있다. 
	-t : 디렉토리만 본다. 
	-L 2 : 지정 수준(2)까지만 출력
	-P *.tar.gz : 패턴 지정 구조 출력
touch a.txt : a.txt 파일 생성
ls : 파일 리스트 표출
	man ls : ls 설명. man = manual
	ls -1 : 상세정보 표출
	ls -a : 숨김 파일 표출(파일 앞에 . 찍으면 숨김파일 된다.)0
	ls -l a.txt : a.txt만 표출. directory 찍으면 안에 파일 몇개 있는지 알려준다.
	ls ./tmp : 현재 하위폴더인 tmp 아래에 있는 파일 리스트 표출
mkdir : directory 생성
	mkdir a/b/c/d/e -p : a/b/c/d/e 모두 생성
rmdir : directory 삭제
	rm a -r : a/b/c/d/e 모두 삭제
mv a b : 파일을 a에서 b로 이동, 이름 바꾸기(b가 없으면 b로 이름을 바꾼다)
cp a b : a를 b로 복사해	
	

+ 리눅스

+ 사용자 인터페이스
1. GUI(Graphic User Interface)
  - X window 패키지 : 리눅스의 GUI 환경
  - GNOME, KDE, TWIM : X window 환경을 관리하기 위한 인터페이스
2. Text Mode
  - CLI(Command Line Interface), CUI(Character User Interface), TUI(Text User Interface)

+ 리눅스 계정
  - 리눅스는 보안을 위해 로그인 시 PW 요구한다.
  - 유닉스나 리눅스에서는 기본적으로 세가지 형태의 계정이 있다.
	system > root > 일반사용자
    1) root : 관리자 계정. 거의 모든 권한을 행사할 수 있으며, 시스템 관리 목적의 계정.
	2) system : 시스템 운영에 사용되는 계정. 정상적인 로그인은 불가.
	3) 일반사용자 : 필요에 따라 일반 사용자 계정을 만들고 로그인을 허락할 수 있다.
					보안상의 이유로 시스템 사용에 많은 제약이 있음
	+ su(Substitute User / Switch User) : 다른 계정으로 변경하는 명령어

------------------------------------------------------------------------------------------

+ 리눅스 명령어
 : 파일이나 디렉토리 조작, 어플리케이션 실행, 시스템 설정, 정보 표시 같은 대부분의 동작을 명령어 입력으로 가능하다.
  (*명령어는 대소문자를 철저히 구분한다.)
  
1. 기본 명령어 형태
  $ 명령어 [-옵션1 (인수)] [-옵션2 (인수)] [-옵션3 (인수)]:
    명령어와 옵션의 기본 구분은 공백
	옵션과 인수의 구분은 "-"
	
2. 명령어 분류
  1) shell 내장 명령어
    1-1) shell : 명령어 해석기로의 역할
	  리눅스 명령어(ls) --- shell이 번역 --- kernel이 처리 --> CPU
  2) 외부 명령어 : 주로 bin이라는 이름의 디렉토리에 존재하는 명령어(환경변수 echo $PATH)
  
+ 파일과 디렉토리
 : 컴퓨터가 다루는 데이터는 텍스트, 영상, 음성, 전자 메일 등 종류가 다양하지만 리눅스는 이 모두를 파일이라는 개념으로 취급.
   -> 데이터 형식이 달라도 파일이라는 추상화된 통일된 개념을 사용하면 기본 조작 방법이 모두 같아져서 편리해짐
 : 디렉토리 : 파일이 모여있는 공간, 디렉토리 안에 디렉토리를 만들 수 있으므로 계층구조가 된다 => 트리 구조
 : 제일 위에 있는 디렉토리는 root 디렉토리

+ PATH
 : 사용자는 반드시 트리 구조 어딘가에 존재하는 디렉토리에서 작업한다.
 : 현재 디렉토리에 있는 파일과 디렉토리만 사용자가 직접 조작 가능하므로 현재 디렉토리에 없는 파일과 디렉토리는 다음과 같은 방법으로 사용
   1) 조작 대상이 존재하는 디렉토리로 이동해서 작업
   2) 조작 대상을 지정할 때 경로까지 지정
 : 두 가지 방법 모두 대상이 어디에 존재하는지 알려주는 경로 정보 필요 => PATH
 
 - 절대경로 : 파일 및 디렉토리 위치를 '/'(루트) 기준으로 표시
 - 상대경로 : 파일 및 디렉토리 위치를 '.'(현재 디렉토리) 기준으로 표시 (권장)
   